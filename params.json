{
  "name": "sedp-mis/base-api",
  "tagline": "Abstraction for api resources in laravel.",
  "body": "# SedpMis\\BaseApi\r\n\r\n[![Build Status](https://travis-ci.org/sedp-mis/base-api.svg?branch=develop)](https://travis-ci.org/sedp-mis/base-api)\r\n\r\nAbstraction for api resources in Laravel. Compatible to use with Laravel `4.2` and `5.*`.\r\n\r\n## Installation\r\nUse composer to install base-api and dependencies:\r\n```\r\ncomposer require sedp-mis/base-api\r\n```\r\n\r\n## Introduction\r\n\r\nThe purpose of this repository is to create an abstraction for common use-cases of api resources. \r\nIt is a good practice to version our api so we will set our base api to `api/v1`. \r\nSo in the following api implementations, the example resource to be used is `posts`.\r\n\r\n## Implementation\r\n METHOD     | URL                 | Description\r\n---         | ---                 | ---\r\n`GET`       | `api/v1/posts`      | `@index`, List of resources\r\n`POST`      | `api/v1/posts`      | `@store`, Create or store new resource\r\n`GET`       | `api/v1/posts/{id}` | `@show`, Show resource\r\n`PUT|PATCH` | `api/v1/posts/{id}` | `@update`, Update resource\r\n`DELETE`    | `api/v1/posts/{id}` | `@destroy`, Destroy or delete resource\r\n\r\nNotice that `@<method>` are the same with the controller methods in laravel.\r\n\r\n## Advance Implementation for `GET` methods like `@index` and `@show`.\r\n### `@index` and `@show`\r\n\r\n* __Selective Attributes__. Resource can be fetched with selective or specific fields or attributes by using query parameter `attributes[]`. Example:\r\n ```\r\n GET url?attributes[]=id&attributes[]=title\r\n ```\r\n \r\n* __Relations__. Resource can be fetched with eager loaded relations by using query parameter `relations[]`. Example:\r\n ```\r\n GET url?relations[]=comments&relations[]=labels\r\n ```\r\n \r\n* __Relations Attributes__. Fetched eager loaded relations can also have selective or specific attributes. Example:\r\n ```\r\n GET url?relations[comments][attributes][]=id&relations[comments][attributes][]=text\r\n ```\r\n\r\n### `@index`\r\n* __Pagination__. For list of resources, it is recommended to have it paginated:\r\n ```\r\n GET url?page=1&per_page=100\r\n ```\r\n This example shows that it is currently on the 1st page and showing 100 records per page. \r\n Without `page` parameter, the list will default to all resources to be fetched.\r\n \r\n* __Filtering__. It is also handy to filter list by its attributes using `filters[attribute][]` parameter. Example:\r\n ```\r\n GET url?filters[tag][]=cool&filters[tag][]=trending\r\n ```\r\n\r\n* __Searching__. It is also possible to search by passing `search` query parameter.\r\n ```\r\n GET url?search[input]=SomeTextToSearch&search[compare][]=title&search[compare][]=description\r\n ```\r\n\r\n* __Sorting__. Sorting can be done by this syntax `sort[attribute_1]=asc&sort[attribute_n]=desc`. Example:\r\n ```\r\n GET url?sort[title]=asc\r\n ```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}